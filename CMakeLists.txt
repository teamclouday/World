CMAKE_MINIMUM_REQUIRED(VERSION 3.15.0)
PROJECT(World VERSION 1.0.0 LANGUAGES CXX)

SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)

ADD_DEFINITIONS(-DGLOB_FILE_FOLDER="${CMAKE_SOURCE_DIR}")

IF(NOT CMAKE_BUILD_TYPE)
SET(CMAKE_BUILD_TYPE "Debug" CACHE STRING
"Choose the type of build, options are: Debug Release." FORCE)
ENDIF(NOT CMAKE_BUILD_TYPE)

MESSAGE("-- Current Build Type: ${CMAKE_BUILD_TYPE}")

IF(NOT EXISTS "${CMAKE_SOURCE_DIR}/bin/Debug")
FILE(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/bin/Debug")
MESSAGE("-- Debug Output Folder Created")
ENDIF()
IF(NOT EXISTS "${CMAKE_SOURCE_DIR}/bin/Release")
FILE(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/bin/Release")
MESSAGE("-- Release Output Folder Created")
ENDIF()

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_SOURCE_DIR}/bin/Debug")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_SOURCE_DIR}/bin/Release")

FILE(GLOB_RECURSE SRC_FILES "${CMAKE_SOURCE_DIR}/src/*.cpp")

FIND_PACKAGE(Vulkan REQUIRED)

IF(WIN32)
SET(GLFW_INCLUDE_DIRS "${CMAKE_SOURCE_DIR}/external/glfw/include")
SET(GLFW_LIBRARIES glfw3)
LINK_DIRECTORIES(
    "${CMAKE_SOURCE_DIR}/external/glfw/libs"
)
ELSEIF(UINX)
FIND_PACKAGE(PkgConfig REQUIRED)
PKG_SEARCH_MODULE(GLFW REQUIRED glfw3)
ENDIF()

SET(GLM_INCLUDE_DIRS "${CMAKE_SOURCE_DIR}/external/glm/include")

INCLUDE_DIRECTORIES(
    "${CMAKE_SOURCE_DIR}/include/"
    "${GLM_INCLUDE_DIRS}"
    "${GLFW_INCLUDE_DIRS}"
    "${Vulkan_INCLUDE_DIRS}"
)

IF(MSVC)
ADD_COMPILE_OPTIONS(
    "$<$<CONFIG:DEBUG>:/W3>"
    "$<$<CONFIG:RELEASE>:/O2>"
)
ADD_LINK_OPTIONS(
    "$<$<CONFIG:DEBUG>:/SUBSYSTEM:CONSOLE>"
    "$<$<CONFIG:RELEASE>:/SUBSYSTEM:CONSOLE>"
)
ELSE()
ADD_COMPILE_OPTIONS(
    "$<$<CONFIG:DEBUG>:-Wall;-g>"
    "$<$<CONFIG:RELEASE>:-O2>"
)
ENDIF()

MESSAGE("-- Target Platform: ${CMAKE_GENERATOR_PLATFORM}")

ADD_EXECUTABLE(world ${SRC_FILES})

TARGET_LINK_LIBRARIES(world
    ${GLFW_LIBRARIES}
    ${Vulkan_LIBRARIES}
)